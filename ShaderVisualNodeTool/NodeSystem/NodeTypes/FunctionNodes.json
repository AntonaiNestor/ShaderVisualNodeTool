{
  "NodeTypes": [
    {
      "NodeType": "Function Node",
      "Name": "AdditionFloat",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "FAdd",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float FAdd = $a + $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "AdditionInt",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "int"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "int"
        },
        {
          "SlotType": "Output",
          "SlotName": "IAdd",
          "VariableType": "int"
        }

      ],
      "Code": [
        "int IAdd = $a + $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "AdditionVec2",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec2Add",
          "VariableType": "vec2"
        }

      ],
      "Code": [
        "vec2 Vec2Add = $a + $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "AdditionVec3",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec3Add",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 Vec3Add = $a + $b ; "
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "AdditionVec4",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec4Add",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec3 Vec4Add = $a + $b ; "
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "MultiplyFloat",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "FMult",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float FMult = $a * $b ; "
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "MultiplyInt",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "int"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "int"
        },
        {
          "SlotType": "Output",
          "SlotName": "IMult",
          "VariableType": "int"
        }

      ],
      "Code": [
        "int IMult = $a * $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "MultiplyVec2",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec2Mult",
          "VariableType": "vec2"
        }

      ],
      "Code": [
        "vec2 Vec2Mult = $a * $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "MultiplyVec3",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec3Mult",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 Vec3Mult = $a * $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "MultiplyVec4",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec4Mult",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec4 Vec4Mult = $a * $b ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "PowerFloat",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$base",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$power",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "$PowResult",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float PowResult = pow($a , $b) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "ScaleVec2",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$scalar",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vec2",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Output",
          "SlotName": "ScaledVec2",
          "VariableType": "vec2"
        }

      ],
      "Code": [
        "vec2 ScaledVec2 = $scalar * $vec2 ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "ScaleVec3",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$scalar",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vec3",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "ScaledVec3",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 ScaledVec3 = $scalar * $vec3 ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "ScaleVec4",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$scalar",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vec4",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "ScaledVec4",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec4 ScaledVec4 = $scalar * $vec4 ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "DotProductVec3",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector1",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vector2",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "DotVec3",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 DotVec3 = dot( $vector1 , $vector2 ) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "DotProductVec4",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector1",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vector2",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "DotVec4",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec4 DotVec3 = dot( $vector1 , $vector2 ) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "CrossProduct",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector1",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vector2",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "CrossProdResult",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 CrossProdResult = cross( $vector1 , $vector2 ) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "NormalizeVec2",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Output",
          "SlotName": "NormalizedVec2",
          "VariableType": "vec2"
        }

      ],
      "Code": [
        "vec2 NormalizedVec2 = normalize( $vector) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "NormalizeVec3",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "NormalizedVec3",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 NormalizedVec3 = normalize( $vector) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "NormalizeVec4",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "NormalizedVec4",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec4 NormalizedVec4 = normalize( $vector) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "AbsoluteVal",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$value",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "AbsValue",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float AbsValue = abs( $value) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "Sine",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$value",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "sinVal",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float sinVal = sin( $value) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "Cosine",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$value",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "CosineVal",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float CosineVal = cos( $value) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "Tangent",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$value",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "TanVal",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float TanVal = tan( $value) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "MixVec3",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector1",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vector2",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$scalar",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "MixVec3",
          "VariableType": "vec3"
        }

      ],
      "Code": [
        "vec3 MixVec3 = mix ( $vector1, $vector2, $scalar) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "MixVec4",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector1",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vector2",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$scalar",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "MixVec4",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec4 MixVec4 = mix ( $vector1, $vector2, $scalar) ; "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "Blinn Phong",
      "Category": "Lighting Effects",
      "AvailableShaders": [
        "Vertex",
        "Fragment"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$lightPos",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$Normal",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$FragPos",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$ambientColor",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$diffuseColor",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$specColor",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "BlinnPhong",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec3 normal = normalize($Normal); ",
        "vec3 lightDir = normalize($lightPos - $FragPos);",
        "float lambertian = max(dot(lightDir,normal), 0.0);",
        "float specular = 0.0;",
        "if(lambertian > 0.0) {",
        "vec3 viewDir = normalize(-$FragPos);",
        " vec3 halfDir = normalize(lightDir + viewDir);",
        "float specAngle = max(dot(halfDir, normal), 0.0);",
        "specular = pow(specAngle, 16.0);",
        "}",
        "vec4 BlinnPhong = $ambientColor + lambertian * $diffuseColor + specular * $specColor;"

      ]

    },

    {
      "NodeType": "Function Node",
      "Name": "ScreenSpaceNormals",
      "Category": "Lighting Effects",
      "AvailableShaders": [
        "Fragment"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$lightPos",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$LightColor",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$FragPos",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$ShowNormals",
          "VariableType": "bool"
        },
        {
          "SlotType": "Output",
          "SlotName": "SSN_Color",
          "VariableType": "vec4"
        }


      ],
      "Code": [
        "bool check = $ShowNormals ;",
        "vec3 X = dFdx($FragPos);",
        "vec3 Y = dFdy($FragPos);",
        "vec3 normal=normalize(cross(X,Y));",
        " vec3 lightDirection = normalize($lightPos - $FragPos);",
        "float light = max(0.0, dot(lightDirection, normal));",
        "vec4 SSN_Color;",
        "if (check){",
        "SSN_Color = vec4(normal, 1.0);",
        "}",
        "else{",
        "SSN_Color = $LightColor * light;",
        "}"

      ]

    },

    {
      "NodeType": "Function Node",
      "Name": "Vec4FromFloats",
      "Category": "Type Conversion",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$r",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$g",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec4Construct",
          "VariableType": "vec4"
        }


      ],
      "Code": [
        "vec4 Vec4Construct = vec4($r , $g, $b ,$a); " 
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "Vec3FromFloats",
      "Category": "Type Conversion",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$r",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$g",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vec3Construct",
          "VariableType": "vec3"
        }


      ],
      "Code": [
        "vec3 Vec3Construct = vec3($r, $g, $b );"

      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "PingPong",
      "Category": "Utility",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$t",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$length",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "PP",
          "VariableType": "float"
        }
      ],
      "Code": [
        "float temp = mod($t, $length * 2.0f);",
        "float PP = $length - abs(temp - $length);"

      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "MVP",
      "Category": "Utility",
      "AvailableShaders": [
        "Vertex"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vec",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "MVPvec",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        " vec4 MVPvec = Projection * View * Model* vec4($vec, 1.0); "
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "Vec3ToVec4",
      "Category": "Type Conversion",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$w",
          "VariableType":"float"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vector4From3",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        " vec4 Vector4From3 = vec4($vector, $w) ; "
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "Vec2ToVec4",
      "Category": "Type Conversion",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vector",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Output",
          "SlotName": "Vector4From2",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        " vec4 Vector4From2 = vec4($vector, 1.0, 1.0) ; "
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "MatVecMult",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$Mat4",
          "VariableType": "mat4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$vec4",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "MVmult",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        " vec4 MVmult= $Mat4 * $vec4 ; "
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "DivisionByW",
      "Category": "Mathematical",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$vec4",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Output",
          "SlotName": "DividedbyW",
          "VariableType": "vec3"
        }
      ],
      "Code": [
        " vec3 DividedbyW = vec3( $vec4) / $vec4.w ;"
      ]
    },
    {
      "NodeType": "Function Node",
      "Name": "Explode",
      "Category": "Geometric Effects",
      "AvailableShaders": [
        "Vertex",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$Normal",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$Position",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$Time",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$Magnitude",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "ExplodePos",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        "vec3 ExplDir = $Normal * ((sin($Time) + 1.0) / 2.0) * $Magnitude;",
        "vec4 ExplodePos = $Position + vec4(ExplDir, 0.0);"
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "ArrayIndex",
      "Category": "Utility",
      "AvailableShaders": [
        "Vertex",
        "Tess_Control",
        "Tess_Eval",
        "Fragment",
        "Geometry"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$Array",
          "VariableType": "vec4"
        },
        {
          "SlotType": "Input",
          "SlotName": "$Index",
          "VariableType": "int"
        },
        {
          "SlotType": "Output",
          "SlotName": "ArrayIndex",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        "vec4 ArrayIndex = $Array  ;"
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "SampleTexture",
      "Category": "Texture Manipulation",
      "AvailableShaders": [
        "Fragment"
      ],
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$Texture",
          "VariableType": "sampler2D"
        },
        {
          "SlotType": "Input",
          "SlotName": "$TexCoords",
          "VariableType": "vec2"
        },
        {
          "SlotType": "Output",
          "SlotName": "TexColor",
          "VariableType": "vec4"
        }
      ],
      "Code": [
        "vec4 TexColor = texture( $Texture, $TexCoords) ;"
      ]

    }
  ]
}