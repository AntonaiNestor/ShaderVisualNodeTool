{
  "NodeTypes": [
    {
      "NodeType": "Function Node",
      "Name": "Addition",
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "AddResult",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float AddResult = $a + $b ; ",
        "//Testing Multiple Lines"
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "Multiplication",
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "MultResult",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float MultResult = $a * $b ; ",
        "//Testing Multiple Lines"
      ]

    },
    {
      "NodeType": "Function Node",
      "Name": "Power",
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$a",
          "VariableType": "float"
        },
        {
          "SlotType": "Input",
          "SlotName": "$b",
          "VariableType": "float"
        },
        {
          "SlotType": "Output",
          "SlotName": "$PowResult",
          "VariableType": "float"
        }

      ],
      "Code": [
        "float PowResult = pow($a , $b) ; ",
        "//Testing Multiple Lines"
      ]

    },

    {
      "NodeType": "Function Node",
      "Name": "Blinn Phong",
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$lightPos",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$ambientColor",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$diffuseColor",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$specColor",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Output",
          "SlotName": "BlinnPhong",
          "VariableType": "vec4"
        }

      ],
      "Code": [
        "vec3 normal = normalize(Normal); ",
        "vec3 lightDir = normalize($lightPos - FragPos);",
        "float lambertian = max(dot(lightDir,normal), 0.0);",
        "float specular = 0.0;",
        "if(lambertian > 0.0) {",
        "vec3 viewDir = normalize(-FragPos);",
        " vec3 halfDir = normalize(lightDir + viewDir);",
        "float specAngle = max(dot(halfDir, normal), 0.0);",
        "specular = pow(specAngle, 16.0);",
        "}",
        "vec4 BlinnPhong = vec4($ambientColor + lambertian * $diffuseColor + specular * $specColor, 1.0);"

      ]

    },

    {
      "NodeType": "Function Node",
      "Name": "Screen Space Normals",
      "Slots": [
        {
          "SlotType": "Input",
          "SlotName": "$lightPos",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$LightColor",
          "VariableType": "vec3"
        },
        {
          "SlotType": "Input",
          "SlotName": "$ShowNormals",
          "VariableType": "bool"
        },
        {
          "SlotType": "Output",
          "SlotName": "SSN_Color",
          "VariableType": "vec4"
        }


      ],
      "Code": [
        "bool check = $ShowNormals ;",
        "vec3 X = dFdx(FragPos);",
        "vec3 Y = dFdy(FragPos);",
        "vec3 normal=normalize(cross(X,Y));",
        " vec3 lightDirection = normalize($lightPos - FragPos);",
        "float light = max(0.0, dot(lightDirection, normal));",
        "vec4 SSN_Color;",
        "if (check){",
        "SSN_Color = vec4(normal, 1.0);",
        "}",
        "else{",
        "SSN_Color = vec4($LightColor * light, 1.0);",
        "}"

      ]

    }



  ]
}